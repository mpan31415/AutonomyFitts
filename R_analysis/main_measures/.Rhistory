) + ylim(0, 25)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
) + ylim(0, 220)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
) + ylim(0, 72)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
) + ylim(0, 25)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
# pwc1 <- task_df %>%
#   pairwise_t_test(
#     trans_err ~ dist_factor, paired = TRUE,
#     p.adjust.method = "holm"
#     )
# pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco"
) + ylim(0, 220)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
) + ylim(0, 72)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
) + ylim(0, 25)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
) + ylim(0, 220)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
) + ylim(0, 72)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
) + ylim(0, 25)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
pwc1 <- task_df %>%
pairwise_t_test(
trans_err ~ dist_factor, paired = TRUE,
p.adjust.method = "holm"
)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
# pwc1 <- task_df %>%
#   pairwise_t_test(
#     trans_err ~ dist_factor, paired = TRUE,
#     p.adjust.method = "holm"
#     )
# pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
# library(viridis)
# library(hrbrthemes)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
task_df <- read_csv("harris_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
) + ylim(0, 220)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
) + ylim(0, 72)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
) + ylim(0, 25)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
# library(viridis)
# library(hrbrthemes)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
task_df <- read_csv("shi_tomasi_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
# pwc1 <- task_df %>%
#   pairwise_t_test(
#     trans_err ~ dist_factor, paired = TRUE,
#     p.adjust.method = "holm"
#     )
# pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
task_df <- read_csv("harris_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
# pwc1 <- task_df %>%
#   pairwise_t_test(
#     trans_err ~ dist_factor, paired = TRUE,
#     p.adjust.method = "holm"
#     )
# pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
# ###### fit linear mixed model 0 - EXCLUDING THE INTERACTION TERM ######
model <- lmer(trans_err ~ distance + (1|sample_id),
data = task_df)
summary(model)
# ###### fit linear mixed model 2 ######
# fit <- lm(average_mt ~ fitts_id_num * auto_level, data = task_df)
# # summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 0 - EXCLUDING THE INTERACTION TERM ######
model <- lmer(trans_err ~ distance + (1|sample_id),
data = task_df)
summary(model)
# ###### fit linear mixed model 2 ######
fit <- lm(trans_err ~ distance, data = task_df)
# summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 0 - EXCLUDING THE INTERACTION TERM ######
model <- lmer(trans_err ~ distance + (1|sample_id),
data = task_df)
summary(model)
# ###### fit linear mixed model 2 ######
fit <- lm(trans_err ~ distance, data = task_df)
summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
# task_df <- read_csv("sift_errors_clipped.csv")
task_df <- read_csv("sift_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
pwc1 <- task_df %>%
pairwise_t_test(
trans_err ~ dist_factor, paired = TRUE,
p.adjust.method = "holm"
)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
pwc1 <- task_df %>%
t_test(
trans_err ~ dist_factor,
p.adjust.method = "holm"
)
pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "trans_perc_err", palette = "jco", outlier.shape = NA
)
bxp1
bxp1 <- ggboxplot(
task_df, x = "dist_factor", y = "yaw_err", palette = "jco", outlier.shape = NA
)
bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=dist_factor, y=trans_err)) +
#     geom_boxplot() +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
task_df <- read_csv("harris_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
pwc1 <- task_df %>%
t_test(
trans_err ~ dist_factor,
p.adjust.method = "holm"
)
pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/R_analysis/kitti_data/")
task_df <- read_csv("shi_tomasi_errors.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor) %>%
get_summary_stats(trans_err, type = "mean_sd")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
pwc1 <- task_df %>%
t_test(
trans_err ~ dist_factor,
p.adjust.method = "holm"
)
pwc1
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_perc_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = yaw_err, wid = sample_id,
within = dist_factor
)
get_anova_table(res.aov)
