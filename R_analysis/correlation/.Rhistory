knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/AutonomyFitts/data/")
big_df <- read_csv("all_data.csv")
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/AutonomyFitts/data/")
big_df <- read_csv("all_data.csv")
######################### scatterplot #########################
p <- ggscatter(big_df, x = "fitts_id_num", y = "eff_id",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray"),
xlab = "Fitts ID", ylab = "Effective ID"
)
# + theme(plot.title = element_text(size = 15, face = "bold"),
#   axis.title.x = element_text(size = 28, face = "bold"),
#   axis.title.y = element_text(size = 28, face = "bold"),
#   axis.text = element_text(size = 24),
#   legend.title = element_text(size = 28),
#   legend.text = element_text(size = 28),
#   legend.position= "none")
# stat_cor(method = "pearson", label.x = 1.5, label.y = 7.5)  # Add correlation coefficient
p
# ggsave(file="pdfs/perf_trust_corr.pdf", plot=p, width=10, height=6)
# ######################### scatterplot #########################
# ggscatter(big_df, x = "traj_err", y = "p_trust",
#           add = "reg.line",                                 # Add regression line
#           conf.int = TRUE,                                  # Add confidence interval
#           add.params = list(color = "blue",
#                             fill = "lightgray"),
#           xlab = "Trajectory Tracking Error", ylab = "Single-Scale Trust"
#           )+
#   stat_cor(method = "pearson", label.x = 1, label.y = 7.5)  # Add correlation coefficient
######################### correlation test #########################
res <- cor.test(big_df$fitts_id_num, big_df$eff_id,
method = "pearson")
res
## Fit Linear Model
```{r fit model}
######################### scatterplot #########################
p <- ggscatter(big_df, x = "fitts_id_num", y = "eff_id",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray"),
xlab = "Fitts ID", ylab = "Effective ID"
)
# + theme(plot.title = element_text(size = 15, face = "bold"),
#   axis.title.x = element_text(size = 28, face = "bold"),
#   axis.title.y = element_text(size = 28, face = "bold"),
#   axis.text = element_text(size = 24),
#   legend.title = element_text(size = 28),
#   legend.text = element_text(size = 28),
#   legend.position= "none")
# stat_cor(method = "pearson", label.x = 1.5, label.y = 7.5)  # Add correlation coefficient
p
# ggsave(file="pdfs/perf_trust_corr.pdf", plot=p, width=10, height=6)
# ######################### scatterplot #########################
# ggscatter(big_df, x = "traj_err", y = "p_trust",
#           add = "reg.line",                                 # Add regression line
#           conf.int = TRUE,                                  # Add confidence interval
#           add.params = list(color = "blue",
#                             fill = "lightgray"),
#           xlab = "Trajectory Tracking Error", ylab = "Single-Scale Trust"
#           )+
#   stat_cor(method = "pearson", label.x = 1, label.y = 7.5)  # Add correlation coefficient
######################### correlation test #########################
res <- cor.test(big_df$fitts_id_num, big_df$eff_id,
method = "pearson")
res
######################### scatterplot #########################
p <- ggscatter(big_df, x = "fitts_id_num", y = "eff_id",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray"),
xlab = "Fitts ID", ylab = "Effective ID"
)
# + theme(plot.title = element_text(size = 15, face = "bold"),
#   axis.title.x = element_text(size = 28, face = "bold"),
#   axis.title.y = element_text(size = 28, face = "bold"),
#   axis.text = element_text(size = 24),
#   legend.title = element_text(size = 28),
#   legend.text = element_text(size = 28),
#   legend.position= "none")
# stat_cor(method = "pearson", label.x = 1.5, label.y = 7.5)  # Add correlation coefficient
p
# ggsave(file="pdfs/perf_trust_corr.pdf", plot=p, width=10, height=6)
######################### correlation test #########################
res <- cor.test(big_df$fitts_id_num, big_df$eff_id,
method = "pearson")
res
###### fit linear mixed model 1 ######
model <- lmer(eff_id ~ fitts_id_num * auto_num + (1 | part_id),
data = task_df)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/AutonomyFitts/data/")
task_df <- read_csv("all_data.csv")
######################### scatterplot #########################
p <- ggscatter(task_df, x = "fitts_id_num", y = "eff_id",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray"),
xlab = "Fitts ID", ylab = "Effective ID"
)
# + theme(plot.title = element_text(size = 15, face = "bold"),
#   axis.title.x = element_text(size = 28, face = "bold"),
#   axis.title.y = element_text(size = 28, face = "bold"),
#   axis.text = element_text(size = 24),
#   legend.title = element_text(size = 28),
#   legend.text = element_text(size = 28),
#   legend.position= "none")
# stat_cor(method = "pearson", label.x = 1.5, label.y = 7.5)  # Add correlation coefficient
p
# ggsave(file="pdfs/perf_trust_corr.pdf", plot=p, width=10, height=6)
######################### correlation test #########################
res <- cor.test(task_df$fitts_id_num, task_df$eff_id,
method = "pearson")
res
###### fit linear mixed model 1 ######
model <- lmer(eff_id ~ fitts_id_num * auto_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_id ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Fitts ID",
modx.labels = c("low", "med", "high")
)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(interactions)
###### fit linear mixed model 1 ######
model <- lmer(eff_id ~ fitts_id_num * auto_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_id ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Fitts ID",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fi3 <- lm(eff_id ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Fitts ID",
modx.labels = c("low", "med1", "med2", "high")
)
###### fit linear mixed model 1 ######
model <- lmer(eff_id ~ fitts_id_num * auto_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_id ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Fitts ID",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fit3 <- lm(eff_id ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Fitts ID",
modx.labels = c("low", "med1", "med2", "high")
)
###### correlation by autonomy group ######
correlation_by_group <- task_df %>%
group_by(auto_level) %>%
summarise(correlation = cor(fitts_id_num, eff_id))
print(correlation_by_group)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
###### fit linear mixed model 1 ######
model <- lmer(eff_id ~ fitts_id_num * auto_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_id ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Fitts ID",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fit3 <- lm(eff_id ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Fitts ID",
modx.labels = c("low", "med1", "med2", "high")
)
###### correlation by autonomy group ######
correlation_by_group <- task_df %>%
group_by(auto_level) %>%
summarise(correlation = cor(fitts_id_num, eff_id))
print(correlation_by_group)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/AutonomyFitts/data/")
task_df <- read_csv("all_data.csv")
auto_levels_order <- c("low_auto", "med_auto", "high_auto")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$auto_level <- factor(task_df$auto_level, levels = auto_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(auto_level, ring_id) %>%
get_summary_stats(eff_auto_num, type = "mean_sd")
###### fit linear mixed model 1 ######
model <- lmer(eff_auto_num ~ auto_num * fitts_id_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_auto_num ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Autonomy",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fit3 <- lm(eff_auto_num ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Autonomy",
modx.labels = c("low", "med1", "med2", "high")
)
###### correlation by autonomy group ######
correlation_by_group <- task_df %>%
group_by(ring_id) %>%
summarise(correlation = cor(auto_num, eff_auto_num))
print(correlation_by_group)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
###### fit linear mixed model 1 ######
model <- lmer(eff_auto_num ~ auto_num * fitts_id_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_auto_num ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Autonomy",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fit3 <- lm(eff_auto_num ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Autonomy",
modx.labels = c("low", "med1", "med2", "high")
)
###### correlation by autonomy group ######
correlation_by_group <- task_df %>%
group_by(ring_id) %>%
summarise(correlation = cor(auto_num, eff_auto_num))
print(correlation_by_group)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
# library(lmerTest)
###### fit linear mixed model 1 ######
model <- lmer(eff_auto_num ~ auto_num * fitts_id_num + (1 | part_id),
data = task_df)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/AutonomyFitts/data/")
task_df <- read_csv("all_data.csv")
auto_levels_order <- c("low_auto", "med_auto", "high_auto")  # Replace these with your actual level names
# Reorder the factor levels of "auto_level" according to levels_order
task_df$auto_level <- factor(task_df$auto_level, levels = auto_levels_order)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(auto_level, ring_id) %>%
get_summary_stats(eff_auto_num, type = "mean_sd")
###### fit linear mixed model 1 ######
model <- lmer(eff_auto_num ~ auto_num * fitts_id_num + (1 | part_id),
data = task_df)
summary(model)
anova(model)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = fitts_id_num, modx = auto_num, plot.points = TRUE, interval = TRUE, int.width = 0.8)
# interact_plot(model, pred = auto_num, modx = fitts_id_num, interval = TRUE, int.width = 0.8)
###### fit linear mixed model 2 ######
fit <- lm(eff_auto_num ~ fitts_id_num * auto_level, data = task_df)
# summary(fit)
interact_plot(fit, pred = fitts_id_num, modx = auto_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Fitts ID", y.label="Effective Autonomy",
modx.labels = c("low", "med", "high")
)
###### fit linear mixed model 3 ######
fit3 <- lm(eff_auto_num ~ auto_num * fitts_id_level, data = task_df)
# summary(fit3)
interact_plot(fit3, pred = auto_num, modx = fitts_id_level,
interval = TRUE, int.type = "confidence", int.width = .8,
plot.points = TRUE,
x.label="Autonomy", y.label="Effective Autonomy",
modx.labels = c("low", "med1", "med2", "high")
)
###### correlation by autonomy group ######
correlation_by_group <- task_df %>%
group_by(ring_id) %>%
summarise(correlation = cor(auto_num, eff_auto_num))
print(correlation_by_group)
